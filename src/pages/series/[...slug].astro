---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro'
import BlogCard from '../../components/blog/BlogCard.astro';
import { dynamicPostFilter, getSeriesPosts, type SeriesPost, type SeriesPosts } from '../../lib/content.utils';
import type { HeadOptions } from '../../components/BaseHead.astro';
import Figure from '../../components/Figure.astro';

export async function getStaticPaths() {
  const allPosts = dynamicPostFilter(await getCollection('blog'));
  const series = await getCollection('series')
  
  return await Promise.all(series.map(async (s) => {
    const seriesPosts = await getSeriesPosts(s, allPosts) 
    return {
      params: {slug: s.id },
      props: { posts: seriesPosts, series: s },
    };
  }));
}

interface Props {
  posts: SeriesPost[],
  series: CollectionEntry<"series">
}

let {posts, series} = Astro.props
let {slug} = Astro.params
const orderedPosts = posts.sort((a, b) => {
  return (a.index ) - (b.index)
})

const options: HeadOptions = {
	title: `Index of ${series.data.name}`,
	description: series.data.description,
	image: series.data.image
}
---

<BaseLayout {options}>
	<section class="w-full md:w-content mx-auto">
		{series.data.image && (
		<Figure src={series.data.image.src} alt={series.data.image.alt}/>
		)}
    <h1 class="text-6xl font-display font-bold mb-4">{series.data.name}</h1>
    <p class="mb-4">{series.data.description}</p>
    <ul class="flex flex-col gap-4 mt-4">
      {
      orderedPosts.map((post, index) => (
      <li>
				<BlogCard part={post.index} imageIdx={index} id={post.id} tags={post.data.tags} image={post.data.image} title={post.data.title} description={post.data.description} date={post.data.pubDate}/>
      </li>
            ))
      }
    </ul>
  </section>


</BaseLayout>
