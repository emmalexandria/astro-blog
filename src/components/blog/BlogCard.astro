---
import  Figure from '../Figure.astro';
import FormattedDate from '../FormattedDate.astro';
import TagDisplay from './TagDisplay.astro';
import LinkButton from '../LinkButton.astro';
import {Icon} from "astro-icon/components"

interface Props {
  id: string;
  imagePath?: string;
  altText?: string;
  title: string;
  description: string;
  date: Date;
  tags?: string[];
  imageIdx?: number
	part?: number;
	pinned?: boolean
}


let {id, imagePath, altText, title, description, date, tags, part,imageIdx=0, pinned = false}: Props = Astro.props

const loading: "eager" | "lazy" = imageIdx < 3 ? "eager" : "lazy"
const href = `/blog/${id}`  
---

<div class="border block my-4 transition-all border-duotone hover:border-duotone-hover p-4 rounded">
  <a  {href}>
    {imagePath &&  <Figure image={true} {loading} class="mb-2 rounded" src={imagePath} alt={altText ?? ""} />}
    {part !== undefined && (<p class="font-body text-sm font-bold">Part {part}</p>)}  
    <div class="flex flex-row items-center justify-between">
			<h2 class="font-bold font-display text-2xl">{title}</h2>
			{pinned === true && (
			<span class="flex p-4 flex-row items-center gap-1">
				<Icon size="24" class="text-primary-500 stroke-2" name="lucide:pin"	/>
			</span>
			)}
		</div>
  </a>
      <p class="text-sm italic">
        <FormattedDate date={date} />
      </p>
  <p class="mb-2">{description}</p>
  <LinkButton primary {href}>Read more <Icon name="lucide:arrow-right"/></LinkButton>
  {tags && (
  <div class="flex flex-row gap-2 mt-2">
    <TagDisplay tags={tags}/>
  </div>
  )}
</div>

