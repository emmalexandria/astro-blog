---
import Figure from '../Figure.astro';
import FormattedDate from '../FormattedDate.astro';
import TagDisplay from './TagDisplay.astro';
import LinkButton from '../LinkButton.astro';
import {Icon} from "astro-icon/components"
import type { PostListItem, SeriesPost } from '../../lib/content.utils';
import type { CollectionEntry } from 'astro:content';
import CardHeader from './CardHeader.astro';

interface Props {
	id: string;
	image?: {src: string, alt: string}
  title: string;
  description: string;
  date: Date;
  tags?: string[];
  imageIdx?: number;
	posts?: CollectionEntry<"blog">[]
	pinned?: boolean
	linkToSeries?: boolean
	hideParts?: boolean
}


let {id, image, title, description, date, tags, imageIdx=0, posts = [] ,pinned = false, linkToSeries = false, hideParts = false}: Props = Astro.props

const contents = posts.map((p) => {
  return {
    title: p.data.title,
    description: p.data.description,
    index: (p as SeriesPost).index,
    href: `/blog/${p.id}`
  }
})

const loading: "eager" | "lazy" = imageIdx < 3 ? "eager" : "lazy"
const href = `/series/${id}`
const buttonHref = linkToSeries ? href : contents[0].href
const buttonContent = linkToSeries ? "Go to series" : "Start reading"
const headerImage = image ? {...image, loading} : undefined;
---

<div class="border block transition-all border-duotone hover:border-duotone-hover p-4 rounded">
	<CardHeader {title} {href} {pinned} image={headerImage}/>
	<p class="text-sm flex flex-row gap-2">
    <span class="font-bold">
      Series 
    </span>
    <span class="italic">
      <FormattedDate date={date} />

    </span>
      </p>
	<p class="mb-2">{description}</p>
	{!hideParts && (
	<h3 class="text-xl font-display">Parts</h3>
	<ol start={contents[0].index} class="list-decimal marker:font-bold marker:text-mono-400 marker:high-contrast:text-mono-900 marker:high-contrast:dark:text-mono-100 list- list-inside mb-4 flex flex-col gap-2">
		{contents.map((c) => (
		<li class="">
			<a class="hover:underline transition-all underline-offset-4 decoration-transparent hover:underline-offset-2 hover:decoration-primary-500 decoration-2 motion-reduce:underline-offset-2" href={c.href}>
				{c.title}
			</a>
		</li>
		))}
	</ol>
	)}
	<LinkButton primary href={buttonHref}>{buttonContent}<Icon name="lucide:arrow-right"/></LinkButton>
	{tags && (
	<div class="flex flex-row gap-2 mt-2">
		<TagDisplay tags={tags}/>
	</div>
	)}
</div>

